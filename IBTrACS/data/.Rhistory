month(dattest[,13])
month(dattest[date_time])
month(dattest$date_time)
mutate(dat,date_time=ymd_hms(dat[,7]))
mutate(dat,date_time=ymd_hms(dat$ISO_time))
month(dat$date_time,label=TRUE)
dat
month(dattest$date_time,label=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
dat3 <- read_csv("https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2019/master/data/ibtracs_2010.csv", col_names = c("Serial_Num","Season","Num","Basin","Sub_basin","Name","ISO_time","Nature","Latitude","Longitude","Wind(WMO)","Press(WMO)"), col_types = c(col_character(),col_integer(),col_character(),col_factor(),col_character(),col_character(),col_character(),col_character(),col_double(),col_double(),col_double(),col_double()), na = c("", "NA"))
dat
length(dat)
dat <- mutate(dat,date_time=ymd_hms(dat$ISO_time))
dat <- mutate(dat,month_num=month(dat$date_time))
dat <- mutate(dat,month_str=month(dat$date_time,label=TRUE))
length(dat)
height(dat)
ncol(dat)
nrow(dat)
filter(dat$Longitude==0)
filter(dat$Longitude=0)
filter(dat,Latitude=0)
filter(dat,Latitude==0)
filter(dat,Latitude==-9,5)
filter(dat,Latitude==-9.5)
filter(dat,Latitude==-0)
filter(dat,Latitude==0)
count(dat,Latitude<0)
tally(dat,Latitude<0)
nrow(select(dat,Latitude<0))
nrow(filter(dat,Latitude<0))
nrow(filter(dat,Latitude>0))
nrow(filter(dat,Latitude==0))
summary(dat)
summarise(group_by(Nature))
summarise(group_by(dat,Nature))
dat$Nature
dat$Nature==TS
filter(dat,Nature=="TS")
filter(dat,Nature=="NR")
dat
filter(dat,Nature=="TS")
typeof(dat)
library(dplyr)
filter(dat,Nature=="TS")
View(dat)
filter(dat,Name="ANJA")
filter(dat,Name=="ANJA")
filter(dat,Nature=="TS")
filter(dat,Nature==" TS")
filter(filter(dat,Nature==" TS"), Wind.WMO.>=35
)
filter(filter(dat,Nature==" TS"), Wind.WMO.>=35)
nrow(filter(filter(dat,Nature==" TS"), Wind.WMO.>=35))
nrow(filter(dat, Wind.WMO.>=64))
nrow(filter(dat, Wind.WMO.>=35))
max(dat$Wind.WMO.)
filter(dat,Wind.WMO.==max(dat$Wind.WMO.))
select(dat,name)
filter(dat,Wind.WMO.==max(dat$Wind.WMO.))$Name
filter(dat,Wind.WMO.==max(dat$Wind.WMO.))$Name$Wind.WMO.
filter(dat,Wind.WMO.==max(dat$Wind.WMO.))$Name,Wind.WMO.
filter(dat,Wind.WMO.==max(dat$Wind.WMO.))$(Name,Wind.WMO.)
filter(dat,Wind.WMO.==max(dat$Wind.WMO.))
select(filter(dat,Wind.WMO.==max(dat$Wind.WMO.)),Name,Wind.WMO.)
select(filter(dat,Wind.WMO.==min(dat$Wind.WMO.)),Name,Wind.WMO.)
select(filter(dat,Press.WMO.==min(dat$Press.WMO.)),Name,Press.WMO.)
summarise(group_by(dat,month_str))
summarise(group_by(dat,month_str),ncol())
summarise(group_by(dat,month_str),ncol
)
summarise(group_by(dat,month_str),)
summary(dat)
summary(dat,month_str)
summary(dat)
summary(dat$month_str)
max(summary(dat$month_str))
select(summary(dat$month_str),max(summary(dat$month_str)))
summary(dat$month_str)
select(summary(dat$month_str),max(summary(dat$month_str)))
summary(dat$month_str)
max(summary(dat$month_str))
summary(dat$month_str)
max(summary(dat$month_str))
typeof(summary(dat$month_str))
col(max(summary(dat$month_str)))
size(summary(dat$month_str))
length(summary(dat$month_str))
col(dat)
summary(dat$month_str)
max(summary(dat$month_str))
summarise(group_by(dat,month_str),)
table(dat)
table(dat,month_str)
table(dat$month_str)
max(table(dat$month_str))
table(dat$month_str)
max(table(dat$month_str))
str(table(dat$month_str))
table(dat$month_str)
max(table(dat$month_str))
max.col(table(dat$month_str))
table(dat$month_str)
max(table(dat$month_str))
ggplot(dat, aes(x=table(dat$month_str)))+geom_bar()
library(ggplot2)
ggplot(dat, aes(x=table(dat$month_str)))+geom_bar()
ggplot(dat, aes(x=month_str,y=table(dat$month_str)))+geom_bar()
max(table(dat$month_str))
count(table(dat$month_str))
table(dat$month_str)
barplot(table(dat$month_str))
dat$month_str
distinct(dat$month_str)
unique(dat$month_str)
arrange(unique(dat$month_str),desc=TRUE)
filter(dat,month_str)
select(dat,month_str)
unique(select(dat,month_str))
distinct(select(dat,month_str))
summarise(group_by(dat,month_str),noh = n())
max(summarise(group_by(dat,month_str),noh = n()))
max(summarise(group_by(dat,month_str),noh = n())[,2])
select(summarise(group_by(dat,month_str),noh = n()),noh=max(summarise(group_by(dat,month_str),noh = n())[,2]))
select((summarise(group_by(dat,month_str),noh = n())),noh=(max(summarise(group_by(dat,month_str),noh = n())[,2]))
)
select(summarise(group_by(dat,month_str),noh = n()),noh=201)
summarise(group_by(dat,month_str), NoR = n())
summarise(group_by(dat,month_str), number_of_records = n())
hrpryr <- summarise(group_by(dat,month_str), number_of_records = n())
max.col(hrpryr)
hrpryr
rpryr <- hrpryr
rpryr
rpryr
ggplot(rpryr, aes(x=month_str,y=number_of_records)+geom_bar()
)
ggplot(rpryr, aes(x=month_str,y=number_of_records))+geom_bar()
ggplot(rpryr, aes(x=month_str)+geom_bar()
)
ggplot(rpryr, aes(x=month_str))+geom_bar()
ggplot(dat, aes(x=month_str))+geom_bar()
which(rpryr[,2]==max(rpryr[,2])
)
which(rpryr[,2]==max(rpryr[,2]))
rpryr[which(rpryr[,2]==max(rpryr[,2])),]
summarise(group_by(dat,month_str), number_of_records = n())
rpryr
[which(rpryr[,2]==max(rpryr[,2])),]
rpryr[which(rpryr[,2]==max(rpryr[,2])),]
ggplot(dat, aes(x=month_str))+geom_bar()
summarise(group_by(dat,month_str,Name), names_per_month = n())
summarise(group_by((summarise(group_by(dat,month_str,Name), names_per_month = n())),month_str))
summarise(group_by((summarise(group_by(dat,month_str,Name), names_per_month = n())),month_str),name_per_month=n())
summarise(group_by((summarise(group_by(dat,month_str,Name), appearances = n())),month_str),name_per_month=n())
appOfName_per_month <- summarise(group_by(dat,month_str,Name), appearances = n())
names_per_month <- summarise(group_by((appOfName_per_month),month_str),name_per_month=n())
View(appOfName_per_month)
View(names_per_month)
ggplot(names_per_month,aes(x=month_str))+geom_bar()
ggplot(dat,aes(x=names_per_month))+geom_bar()
ggplot(names_per_month,aes(x=month_str))+geom_bar()
ggplot(names_per_month,aes(x=name_per_month))+geom_bar()
ggplot(appOfName_per_month,aes(x=month_str)+geom_bar()
)
ggplot(appOfName_per_month,aes(x=month_str))+geom_bar()
ggplot(appOfName_per_month,aes(x=month_str))+geom_bar()
dat
filter(dat,Name=="JULIA")
ggplot(filter(dat,Name=="JULIA"),aes(x=date_time,y=Wind.WMO.))+geom_point()
ggplot(filter(dat,Name=="JULIA"),aes(x=date_time,y=Wind.WMO.))+geom_line()
install.packages(maps)
install.packages("maps")
library(maps)
map()
map("world", interior = FALSE)
map("world", interior = FALSE)
map("world", interior = FALSE)
fill = TRUE, col = "#69DFDF"
map("world", interior = FALSE,fill = TRUE, col = "#69DFDF")
map("world", interior = FALSE,fill = TRUE, col = "#228B22")
map("world", interior = FALSE,fill = TRUE, col = "#228B22","69DFDF")
map("world", interior = FALSE,fill = TRUE, col = c("#228B22","69DFDF"))
map("world", interior = FALSE,fill = TRUE, col = c("#228B22","69D1D1"))
map("world", interior = FALSE,fill = TRUE, col = c("#228B22","#69D1D1"))
map("world", interior = FALSE,fill = TRUE, col = "#228B22")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#69D1D1")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#254CFF")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#69D1D1")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#254CFF")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF",xlim=0)
map('italy', fill = TRUE, col = 1:10)
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF",xlim=0)
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
map('world')
map('lakes', add=TRUE, fill=TRUE, col='white', boundary='black')
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF",myborder=0.1)
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
map.axes
map("state")
map.axes(cex.axis=0.8)
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude)
points(x=dat$Longitude,y=dat$Latitude,pch=1)
points(x=dat$Longitude,y=dat$Latitude,pch=20)
points(x=dat$Longitude,y=dat$Latitude,pch=19)
points(x=dat$Longitude,y=dat$Latitude,pch=5)
points(x=dat$Longitude,y=dat$Latitude,pch=6)
points(x=dat$Longitude,y=dat$Latitude,pch=7)
points(x=dat$Longitude,y=dat$Latitude,pch=8)
points(x=dat$Longitude,y=dat$Latitude,pch=19)
points(x=dat$Longitude,y=dat$Latitude,pch=7)
points(x=dat$Longitude,y=dat$Latitude,pch=19)
points(x=dat$Longitude,y=dat$Latitude,pch=19)
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".")
points(x=dat$Longitude,y=dat$Latitude,pch=".", col="#FF0000")
points(x=dat$Longitude,y=dat$Latitude,pch=16, col="#FF0000")
points(x=dat$Longitude,y=dat$Latitude,pch=".", col="#FF0000")
points(x=dat$Longitude,y=dat$Latitude,pch=".", col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".", col="#FF0000")
points(x=dat$Longitude,y=dat$Latitude,pch="*", col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch="`", col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=5, col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=2, col="#FF0000")
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=3, col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=2, col="#FF0000")
points(x=0,y=0:360,pch=".")
points(x=NULL,y=0:360,pch=".")
points(x=0:360,y=0:360,pch=".")
points(x,y=NULL,pch=".")
points(y=0:360,pch=".")
points(x=NULL,y=0:360,pch=".")
points(x=0:360,y=NULL,pch=".")
points(x=-360:360,y=NULL,pch=".")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=2, col="#FF0000")
help(package(maps))
help(package("maps"))
help(package="maps")
points(x=0,pch=".")
points(y=0,pch=".")
points(x=NULL,y=0,pch=".")
points(x=NULL,pch=".")
abline(y=0,pch=".")
abline(b=0,pch=".")
abline(h=0,pch=".")
abline(h=0,pch="o")
abline(h=0,pch=",")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=2, col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=2, col="#FF0000")
abline(h=0,pch=".")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=2, col="#FF0000")
plot(-10:10,y=NULL, type="l", lty=2)
abline(h=0,type="3")
abline(h=0,lty="3")
abline(h=0,lty=3)
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=2, col="#FF0000")
abline(h=0,lty=3)
points(x=dat$Longitude,y=dat$Latitude,pch=".", cex=2, col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch="*", cex=1, col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch="*", cex=0.5, col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=20, cex=0.5, col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=20, cex=0.25, col="#FF0000")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=20, cex=0.25, col="#FF0000")
abline(h=0,lty=3)
title("Location of Storm Records")
title("Position of Recorded Storms in 2010 Season")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude,pch=20, cex=0.25, col="#FF0000")
abline(h=0,lty=3)
title("Position of Recorded Storms in 2010 Season")
man(count)
help(count)
help("ncol")
help("read.table")
library(ggplot2)
man(ggplot)
help(ggplot)
x=5
x>4
x>5
x=6
x>5
x <- 1 2 3 4 5 6 7 8 9 10
x <- c(1,2,3,4,5,6,7,8,9,10)
x
x*2
x[1:5]
head(x,5)
z*2
seq(1,2,0.1)
rep(1:3,2)
help("rep")
rep(1:3,each=2)
rep(1:3,each=2,2)
matrix(1:12,ncol=3)
matrix(1:12,nrow=4)
help("matrix")
matrix(1:12,ncol=3,byrow=TRUE)
help(":)")
help(":")
dat <- read.table("https://raw.githubusercontent.com/ucb-stat133/stat133-fall-2019/master/data/ibtracs_2010.csv", sep = ",", header = TRUE, na.strings = "NA", col.names = c("Serial_Num","Season","Num","Basin","Sub_basin","Name","ISO_time","Nature","Latitude","Longitude","Wind(WMO)","Press(WMO)"), colClasses = c("character","integer","character","factor","character","character","character","character","real","real","real","real"))
str(dat)
dat
dat$x
seq(1,5)
x
x[c(1,2,3,4,5)]
dat
df[df[,2]==2010]
df[df[,2]==2010,]
dat[dat[,2]==2010,]
dat[dat$Season==2010]
dat[,dat$Season==2010]
dat[1:2,]
dat[1:2,1&3]
dat[1:2,c(1,3)]
dat[1:2,c(3,1)]
_x=2
.x=2
.x
.xyx <- 30
y <- 2
.xyx <- 30
.xys
.xyz
.xyx
x-y <- 32
$ x\bar $
$ \bar{x} $ <- 3
read.table()
help(read.table)
help("read.table"")
help("read.table")
help(count)
help(cnol)
help(ncol)
help("ncol")
help(ggplot2)
git commit -m "data: adding file of LAC players"
git status
| Variable | Description |
| --- | --- |
| Serial_Num | x |
| Season | x |
| Num | x |
| Basin | x |
| Sub_basin | x |
| Name | x |
| ISO_time | x |
| Nature | x |
| Latitude | x |
| Longitude | x |
| Wind(WMO) | x |
| Pres(WMO) | x |
| Variable | Units | Description |
| --- | --- | --- |
| Serial_Num |  | A storm identifier (serial number) that is unlikely to change as storms are added or observations are changed. Format is 'YYYYJJJHTTNNN'. |
| Season | year | The storm season (by year). |
| Num |  | The cardinal number of the system for that season. The count includes all basins, so this will not be continuous for basin files. |
| Basin |  | The basin where the storm began. Definitions of the boundaries can be found [here](https://groups.google.com/forum/#!searchin/ibtracs-qa/basins%7Csort:date/ibtracs-qa/nfOoIc68DrU/skinHQQOBQAJ). |
| Sub_basin |  | Subdivisions of the larger basins to facilitate anolysis. Definitions of the boundaries can be found [here](https://groups.google.com/forum/#!searchin/ibtracs-qa/basins%7Csort:date/ibtracs-qa/nfOoIc68DrU/skinHQQOBQAJ). |
| Name |  | The name given to the storm. |
| ISO_time | UTC | ISO Time provided in Universal Time Coordinates (UTC). Format is 'YYYY-MM-DD HH:mm:ss'. |
| Nature |  | Combined storm type. Definitions of the abbreviations can be found [here](ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/documents/Storm_nature_assignment.pdf). |
| Latitude | degrees north | Latitude of the storm. |
| Longitude | degrees east | Longitude of the storm. |
| Wind(WMO) | knots | Maximum sustained wind speed from the WMO agency for the current location. |
| Pres(WMO) | mb | Measured pressure from the WMO agency for the current location. |
getwd()
setwd(/Users/victoriatovmasyan/Documents/stat133/workouts/workout1/data)
setwd(Users/victoriatovmasyan/Documents/stat133/workouts/workout1/data)
setwd(/Users/victoriatovmasyan/Documents/stat133/workouts/workout1/data)
setwd("/Users/victoriatovmasyan/Documents/stat133/workouts/workout1/data")
getwd
getwd()
dat
dat <- read.csv("../data/ibtracs-2010-2015.csv")
dat$Season
plot(dat$Season)
bar(dat$Season)
barplot(dat$Season)
barplot(dat$Season)
barplot(dat$Season,1:3)
summary(dat$Season)
summarise(dat,group_by(Season))
library(dplyr)
summarise(dat,group_by(Season))
summarise(dat,group_by(dat,Season))
summarise(dat,group_by(dat,Season))
summarise(group_by(dat,Season))
summarise(group_by(dat,Season),count(dat))
summarise(group_by(dat,Season),sum(dat))
summarise(group_by(dat,Season),sum
)
summary(dat)
summarise(group_by(dat,Season),sum(dat))
summarise(group_by(dat,Season),)
ggplot(dat,x=Season)
library(ggplot2)
ggplot(dat,x=Season)
ggplot(dat,aes(x=Season)
)
ggplot(dat,aes(x=Season))+geom_bar
ggplot(dat,aes(x=Season))+geom_bar()
ggplot(dat,aes(x=Basin))+geom_bar()
ggplot(dat,aes(x=Basin))+geom_bar(aes(color=Sub_basin))
ggplot(dat,aes(x=Basin))+geom_bar(aes(fill=Sub_basin))
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$longitude,y=dat$latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
library(maps)
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$longitude,y=dat$latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat$Longitude,y=dat$Latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat[dat$Basin=EP]$Longitude,y=dat$Latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat[dat$Basin==EP]$Longitude,y=dat$Latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat[dat$Basin="EP"]$Longitude,y=dat$Latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat[dat$Basin=="EP"]$Longitude,y=dat$Latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat[dat$Basin=="EP"]$Longitude,y=dat[dat$Basin=="EP"]$Latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
dat$Basin=="EP"
dat[dat$Basin=="EP"]
dat[dat$Basin=="EP",]
dat[dat$Basin=="EP",]
dat[,dat$Basin=="EP"]
dat[dat$Basin=="EP",]
View(dat)
dat[dat$Basin==" EP",]
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat[dat$Basin==" EP"]$Longitude,y=dat[dat$Basin==" EP"]$Latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude, pch=16, cex=0.1, col="#FF0000")
title("Recorded Storm Trajectories (2010-2015)")
map("world", interior = FALSE,fill = TRUE, col = "#228B22", bg = "#67CBFF")
points(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude, pch=16, cex=0.1, col="#FF0000")
facet_grid(.~Season)
title("Recorded Storm Trajectories (2010-2015)")
geom_polygon(dat,aes(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude))
ggplot(dat,aes(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude)) + geom_polygon(usa)
ggplot(dat,aes(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude)) + geom_polygon(usa. aes(x=long, y = lat, group = group), fill = NA, color = "red"))
ggplot(dat,aes(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude)) + geom_polygon(map_data("usa"). aes(x=long, y = lat, group = group), fill = NA, color = "red"))
ggplot() + geom_polygon(map_data("usa"). aes(x=long, y = lat, group = group), fill = NA, color = "red"))
ggplot() + geom_polygon(map_data("usa"))
ggplot() + geom_polygon(data = usa, aes(x=long, y = lat, group = group))
ggplot() + geom_polygon(data = map_data("usa"), aes(x=long, y = lat, group = group))
ggplot() + geom_polygon(data = map_data("usa"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group))
ggplot(dat,aes(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude)) + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group))
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group))
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(dat,aes(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude))
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude))
dat <- read_csv("data/ibtracs-2010-2015.csv", skip = 1, na = c("-999.","-1.0","0.0"), col_names = c("serial_num","season","num","basin","sub_basin","name","iso_time","nature","latitude","longitude","wind","press"), col_types = cols("c","i","c","f","c","c","c","c","d","d","d","d"))
library(readr)
dat <- read_csv("data/ibtracs-2010-2015.csv", skip = 1, na = c("-999.","-1.0","0.0"), col_names = c("serial_num","season","num","basin","sub_basin","name","iso_time","nature","latitude","longitude","wind","press"), col_types = cols("c","i","c","f","c","c","c","c","d","d","d","d"))
dat <- read_csv("../data/ibtracs-2010-2015.csv", skip = 1, na = c("-999.","-1.0","0.0"), col_names = c("serial_num","season","num","basin","sub_basin","name","iso_time","nature","latitude","longitude","wind","press"), col_types = cols("c","i","c","f","c","c","c","c","d","d","d","d"))
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat[dat$Basin==" EP",]$Longitude,y=dat[dat$Basin==" EP",]$Latitude))
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat[dat$basin==" EP",]$longitude,y=dat[dat$basin==" EP",]$latitude))
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat[dat$basin=="EP",]$longitude,y=dat[dat$basin=="EP",]$latitude))
dat2 <- mutate(dat,month=month(dat$iso_time,label=TRUE))
library(lubridate)
dat2 <- mutate(dat,month=month(dat$iso_time,label=TRUE))
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude))
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=5)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.5)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_grid(.~Season)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_grid(.~season)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_grid(.~season)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_grid(season~.)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_wrap(season)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_wrap(.~season)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_wrap(.~month)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_wrap(.~season)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_wrap(dat2,.~season)
ggplot() + geom_polygon(data = map_data("world"), aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(aes(x=dat2[dat2$basin=="EP",]$longitude,y=dat2[dat2$basin=="EP",]$latitude),size=.25) + facet_wrap(.~season)
